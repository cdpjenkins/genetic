plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.+"
    implementation 'org.apache.xmlgraphics:batik-all:1.14'

    implementation platform("org.http4k:http4k-bom:4.9.1.0")
    implementation "org.http4k:http4k-core"
    implementation "org.http4k:http4k-format-jackson"
    implementation "org.http4k:http4k-server-netty"
    implementation "org.http4k:http4k-client-okhttp"
    implementation "org.http4k:http4k-cloudnative"

    implementation "org.jdbi:jdbi3-bom:3.20.0"
    implementation "org.jdbi:jdbi3-core"
    implementation "org.jdbi:jdbi3-postgres:3.20.0"
    runtime "org.postgresql:postgresql:42.2.20"

    implementation platform("software.amazon.awssdk:bom:2.15.15")
    implementation "software.amazon.awssdk:s3"

    testImplementation(platform("org.junit:junit-bom:5.7.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation('com.natpryce:hamkrest:1.8.0.1')

    intTestImplementation(platform("org.junit:junit-bom:5.7.1"))
    intTestImplementation("org.junit.jupiter:junit-jupiter")
    intTestImplementation('com.natpryce:hamkrest:1.8.0.1')

    intTestImplementation "org.testcontainers:testcontainers:1.15.3"
    intTestImplementation "org.testcontainers:junit-jupiter:1.15.3"
    intTestImplementation "org.testcontainers:postgresql:1.15.3"

    intTestRuntime 'org.postgresql:postgresql:42.2.20'
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}


build {
    dependsOn shadowJar
}
task stage(dependsOn: ['build'])

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

task intTest(type: Test) {
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath

    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}
